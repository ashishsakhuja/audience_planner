select_segment_task:
  description: >
    Recommend all audience segments that closely match the campaign query: "{query}".
    Review **all** segments loaded from the official knowledge source, not just the top matches.
    Do not limit the number of segments returned. if 5, 10, or more segments are relevant, include all of them.

    Use only the fields present in the official knowledge source file. Do not infer, invent, or assume any field value.
    Only select from the exact segment names and attributes loaded into memory.

    Prioritize segments that match:
    1. age_range
    2. income_level
    3. location_type
    4. recency
    5. taxonomyId

    IMPORTANT: Use the exact UUID value from the segment.taxonomyId field. Do not guess, invent, or reuse values from other segments.

    Return your output in the following format (do not change casing or labels):

    - **name**: [segment name]
    - **taxonomyId**: [UUID — must match segment.taxonomyId exactly]
    - **age_range**: [value]
    - **income_level**: [value]
    - **location_type**: [value]
    - **recency**: [value]
    - **cpm**: [value]
    - **confidence**: [value]
    - **estimated_reach**: [value]

  expected_output: >
    A markdown-formatted list of segments that most closely match the campaign criteria, using only the official segment data.
    You may return as many segments as are relevant. Do not limit your output to 3 segments.
  agent: segment_agent


validate_segment_task:
  description: >
    Validate whether the recommended segments match the campaign query: "{query}".

    For each recommended segment, cross-check every field with the source data (age_range, income_level, location_type, recency, taxonomyId, cpm).
    Do not guess or infer values.

    IMPORTANT: segmentId must match the exact UUID from segment.segmentId. Do not repeat or reuse IDs across segments.
    IMPORTANT: Only flag mismatches if the campaign query explicitly defines required thresholds.
    IMPORTANT: You must include ALL fields below for each segment, even if they are not present in the data. If any value is missing, write "Not provided" explicitly.

    Return your output in this exact field-by-field markdown format per segment:

    ### [segment name]

    - **Audience Segment Id**: [UUID]
    - **identityGraphName**: [value]
    - **age_range**: [value] - Matches / Mismatch (explanation)
    - **size**: [value] - Matches / Mismatch (explanation)
    - **income_level**: [value] - Matches / Mismatch (explanation)
    - **location_type**: [value] - Matches / Mismatch (explanation)
    - **recency**: [value] - Matches / Mismatch (explanation)
    - **cpm**: [value] - Matches / Mismatch (explanation if applicable)
    - **cpmCap** [value] - Matches / Mismatch (explanation if applicable)
    - **estReach**: [value] - Matches / Mismatch (explanation if applicable)
    - **programmaticMediaPct**: [value] - Matches / Mismatch (explanation)
    - **advertiserDirectPct**: [value] - Matches / Mismatch (explanation)
    - **confidence**: [value] (state if high, medium, or low — do not flag unless required)
    - **category**: [value] (explanation if applicable)
    - **quality_score**: [value] (explanation)
    - **data_source**: [value] - Matches / Mismatch (explanation if applicable)

    End with a summary like:

    **Summary**: Only segments X and Y are fully valid. Segment Z is partially valid. Others are not valid.

  expected_output: >
    Return your output in this exact field-by-field markdown format per segment:

    ### [segment name]

    - **Audience Segment Id**: [UUID]
    - **identityGraphName**: [value]
    - **age_range**: [value] - Matches / Mismatch (explanation)
    - **size**: [value] - Matches / Mismatch (explanation)
    - **income_level**: [value] - Matches / Mismatch (explanation)
    - **location_type**: [value] - Matches / Mismatch (explanation)
    - **recency**: [value] - Matches / Mismatch (explanation)
    - **cpm**: [value] - Matches / Mismatch (explanation if applicable)
    - **cpmCap** [value] - Matches / Mismatch (explanation if applicable)
    - **estReach**: [value] - Matches / Mismatch (explanation if applicable)
    - **programmaticMediaPct**: [value] - Matches / Mismatch (explanation)
    - **advertiserDirectPct**: [value] - Matches / Mismatch (explanation)
    - **confidence**: [value] (state if high, medium, or low — do not flag unless required)
    - **category**: [value] (explanation if applicable)
    - **quality_score**: [value] (explanation)
    - **data_source**: [value] - Matches / Mismatch (explanation if applicable)

    End with a summary like:

    **Summary**: Only segments X and Y are fully valid. Segment Z is partially valid. Others are not valid.
  agent: verifier_agent
  depends_on: [select_segment_task]
