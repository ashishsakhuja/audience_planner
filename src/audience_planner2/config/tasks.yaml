select_segment_task:
  description: >
    Recommend the top audience segments that best match the campaign query: "{query}".
    Use only the indexed data from the segments.json file and never invent names or traits.

    Prioritize segments that match:
    1. Demographic fit (age, income, location)
    2. Recency of engagement
    3. Confidence and CPM

    Return each with:
    - Name
    - TaxonomyId
    - Age Range
    - Income Level
    - Location Type
    - Recency
    - CPM
    - Confidence
    - Estimated Reach
  expected_output: >
    A markdown formatted list of the top 3–5 recommended segments, including all specified fields.
  agent: segment_agent

validate_segment_task:
  description: >
    Validate whether the recommended segments truly align with the campaign query: "{query}".
    Cross-check all traits (taxonomyId, age range, income level, location type, recency, and CPM) against the official segment data.

    For each recommended segment, output the following:

    - **Name**
    - **TaxonomyId**
    - **Validation Status**: Valid / Not Valid / Closest Match
    - **Age Range**: Matches or Mismatch (explanation)
    - **Income Level**: Matches or Mismatch (explanation)
    - **Location Type**: Matches or Mismatch (explanation)
    - **Recency**: Matches or Mismatch (explanation)
    - **CPM**: Matches or Mismatch (explanation, if applicable)
    - **Confidence**: Mention if confidence is high or low

    Then conclude with a summary stating which segments are fully valid, partially valid (closest), or invalid.

  expected_output: >
    A structured markdown report with a section for each segment, showing field-by-field match analysis as described above. Do not summarize everything in one paragraph — each segment must have its own bullet list.
  agent: verifier_agent
  depends_on: [select_segment_task]
